
name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache pip dependencies for faster builds
      - name: Set up pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip, setuptools, and wheel
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest coverage

      - name: Run unit tests
        run: pytest tests --disable-warnings

      - name: Run coverage and display summary
        run: |
          coverage run -m pytest tests
          coverage report
          coverage html

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: html-coverage-report
          path: htmlcov/

      # Mark workflow as failed if tests fail (default behavior)
      # ✅ Green check if all tests pass, ❌ if any fail

# Notes:
# - No network calls are made during tests (enforced by your codebase).
# - Caching pip speeds up repeated runs.
# - Coverage summary is printed in the workflow logs and HTML report is downloadable.
# - Matrix builds test across multiple Python versions for future-proofing.
